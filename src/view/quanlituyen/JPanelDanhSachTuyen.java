/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.quanlituyen;

import connectSQL.LopKetNoi;
import controller.ChuyenManHinhView;
import controller.ListTransferHandler;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import module.Tuyen;
import java.sql.ResultSet;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.TransferHandler;
import moduledao.TuyenDao;
import view.JPanelQuanLiTuyen;
import java.sql.Time;
import module.KhoangCachTram;
import module.MyDefaultTableModel;
import module.TuyenDiQuaTram;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class JPanelDanhSachTuyen extends javax.swing.JPanel {

    private TuyenDao tuyenDao;
    private Connection connection;
    private LopKetNoi ketNoiCSDL;
    private ArrayList<Tuyen> DS;
    private ArrayList<Integer> DSKhoangCachConThieu; //lưu danh sách những hàng chứa ô Khoảng Thời gian còn thiếu
                                                    //để check xem Tuyến đã được thêm đầy đủ Thời gian đi qua các Trạm chưa
    private DefaultTableModel tbmBangTuyen;
    private int count = 0;
    private int hangDangChon = -1;
    private DefaultListModel<String> lmTram;
    private DefaultListModel jListCacTramDiQuaModel;
    private MyDefaultTableModel jTableKhoangCachModel;
    ListTransferHandler lh;
    SimpleDateFormat formatter;
    int chucNangSua;
    /**
     * Creates new form JPanelDanhSachTuyen
     */
    public JPanelDanhSachTuyen() {
        initComponents();
        formatter=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
        jListCacTramDiQuaModel = new DefaultListModel();
        lh=new ListTransferHandler();
        lmTram = new DefaultListModel<>();
        tuyenDao = new TuyenDao();
        ketNoiCSDL=new LopKetNoi();
        connection = ketNoiCSDL.getConnection();
        tbmBangTuyen = (DefaultTableModel) jtbTuyen.getModel();
        tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from Tuyen"), tbmBangTuyen);
        jListCacTramDiQua.setTransferHandler(lh);
        jListCacTramDiQua.setModel(jListCacTramDiQuaModel);
        jlTram.setTransferHandler(lh);
    }

    private void loadTramVaoList() {
        try {
            ResultSet rs = LopKetNoi.select("select tenTram from tram");
            while (rs.next()) {
                lmTram.addElement(rs.getString(1));
            }
        } catch (Exception e) {
        }
        jlTram.setModel(lmTram);
    }

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdlNhapKhoangCach = new javax.swing.JDialog((javax.swing.JFrame) null,true);
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableKhoangCach = new javax.swing.JTable();
        btnXacNhan = new javax.swing.JButton();
        jdlThuocTinhTuyen = new javax.swing.JDialog((javax.swing.JFrame) null, true);
        jPanel2 = new javax.swing.JPanel();
        jlbTenDialog = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfMaTuyen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfTenTuyen = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnTiepTuc = new javax.swing.JButton();
        jlbMaTuyen = new javax.swing.JLabel();
        jlbCacTramDiQua = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlTram = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListCacTramDiQua = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jlbTenTuyen = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbTuyen = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jtfTimKiem = new javax.swing.JTextField();
        cbbTimKiem = new javax.swing.JComboBox<>();
        cbbSapXep = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnThongTIn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        jdlNhapKhoangCach.setMinimumSize(new java.awt.Dimension(400, 350));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Khoảng Cách");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jTableKhoangCach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableKhoangCach);

        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(btnXacNhan)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXacNhan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jdlNhapKhoangCachLayout = new javax.swing.GroupLayout(jdlNhapKhoangCach.getContentPane());
        jdlNhapKhoangCach.getContentPane().setLayout(jdlNhapKhoangCachLayout);
        jdlNhapKhoangCachLayout.setHorizontalGroup(
            jdlNhapKhoangCachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jdlNhapKhoangCachLayout.setVerticalGroup(
            jdlNhapKhoangCachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jdlThuocTinhTuyen.setMinimumSize(new java.awt.Dimension(640, 400));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setEnabled(false);
        jPanel2.setMinimumSize(new java.awt.Dimension(588, 555));

        jlbTenDialog.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlbTenDialog.setForeground(new java.awt.Color(102, 102, 255));
        jlbTenDialog.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbTenDialog.setText("THÊM TUYẾN");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Mã tuyến:");

        jtfMaTuyen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfMaTuyen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfMaTuyenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfMaTuyenKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Tên tuyến:");

        jtfTenTuyen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfTenTuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTenTuyenActionPerformed(evt);
            }
        });
        jtfTenTuyen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfTenTuyenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTenTuyenKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Các trạm đi qua:");

        btnTiepTuc.setText("Tiếp Tục");
        btnTiepTuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTiepTucActionPerformed(evt);
            }
        });

        jlbMaTuyen.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jlbMaTuyen.setForeground(new java.awt.Color(255, 51, 51));
        jlbMaTuyen.setText("Không được để trống");

        jlbCacTramDiQua.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jlbCacTramDiQua.setForeground(new java.awt.Color(255, 51, 51));
        jlbCacTramDiQua.setText("Không được để trống");

        jlTram.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlTram.setDragEnabled(true);
        jlTram.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane4.setViewportView(jlTram);

        jListCacTramDiQua.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListCacTramDiQua.setDragEnabled(true);
        jListCacTramDiQua.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane5.setViewportView(jListCacTramDiQua);

        jlbTenTuyen.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jlbTenTuyen.setForeground(new java.awt.Color(255, 51, 51));
        jlbTenTuyen.setText("Không được để trống");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbCacTramDiQua)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbTenDialog)
                .addGap(241, 241, 241))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbMaTuyen)
                            .addComponent(jtfTenTuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbTenTuyen)
                            .addComponent(jtfMaTuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(btnTiepTuc)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jlbTenDialog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfMaTuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbMaTuyen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfTenTuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(290, 290, 290))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jlbTenTuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbCacTramDiQua)
                        .addGap(9, 9, 9)
                        .addComponent(btnTiepTuc)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jdlThuocTinhTuyenLayout = new javax.swing.GroupLayout(jdlThuocTinhTuyen.getContentPane());
        jdlThuocTinhTuyen.getContentPane().setLayout(jdlThuocTinhTuyenLayout);
        jdlThuocTinhTuyenLayout.setHorizontalGroup(
            jdlThuocTinhTuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jdlThuocTinhTuyenLayout.setVerticalGroup(
            jdlThuocTinhTuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdlThuocTinhTuyenLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTextField3.setText("jTextField3");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel10.setText("jLabel10");

        jLabel15.setText("jLabel15");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("DANH SÁCH TUYẾN");

        jtbTuyen.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtbTuyen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã tuyến", "Tên Tuyến", "Thời gian hiệu chỉnh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbTuyen.setGridColor(new java.awt.Color(255, 255, 255));
        jtbTuyen.setRowHeight(25);
        jtbTuyen.setSelectionBackground(new java.awt.Color(51, 204, 255));
        jtbTuyen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbTuyenMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtbTuyenMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtbTuyen);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Chức năng");

        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 255));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua.setText("SỬA");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Tìm kiếm:");

        jtfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimKiemKeyReleased(evt);
            }
        });

        cbbTimKiem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbbTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã tuyến", "Tên tuyến" }));

        cbbSapXep.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbbSapXep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên tuyến a-z", "Tên tuyến z-a" }));
        cbbSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSapXepActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Sắp xếp:");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outline_arrow_back_black_24dp_1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnThongTIn.setBackground(new java.awt.Color(255, 255, 255));
        btnThongTIn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThongTIn.setText("THÔNG TIN");
        btnThongTIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(719, 719, 719)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(btnThem)
                        .addGap(51, 51, 51)
                        .addComponent(btnSua)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(cbbSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(btnXoa)
                                .addGap(56, 56, 56)
                                .addComponent(btnThongTIn))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(201, 201, 201)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(jButton1))
                .addGap(11, 11, 11)
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnThongTIn))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void batCacTruong() {
        jtfMaTuyen.setEditable(true);
        jtfTenTuyen.setEditable(true);
    }

    private void tatCacTruong() {
        jtfMaTuyen.setEditable(false);
        jtfTenTuyen.setEditable(false);
    }

    private void hienThiDialog(String tenDialog) {
        switch (tenDialog) {
            case "THÊM TUYẾN":
                jListCacTramDiQua.setEnabled(true);
                jlTram.setEnabled(true);
                loadTramVaoList();
                batCacTruong();
                setLabelThongBaoRong();
                setRong();
                break;
            case "SỬA TUYẾN":
                jListCacTramDiQua.setEnabled(true);
                jlTram.setEnabled(true);
                batCacTruong();
                setLabelThongBaoRong();
                jtfMaTuyen.setEditable(false);
                tuyenDao.getTuyenTuBang(jtbTuyen.getSelectedRow(), jtbTuyen, jtfMaTuyen, jtfTenTuyen);
                String thoiGianHieuChinh=jtbTuyen.getValueAt(hangDangChon, 2).toString();
                jListCacTramDiQuaModel=ketNoiCSDL.getJListTramTrongTuyen(jtfMaTuyen.getText(),thoiGianHieuChinh);
                jListCacTramDiQua.setModel(jListCacTramDiQuaModel);
                lmTram=ketNoiCSDL.getJListTramChuaThem(jtfMaTuyen.getText(), thoiGianHieuChinh);
                jlTram.setModel(lmTram);
                break;
            case "THÔNG TIN TUYẾN":
                tatCacTruong();
                setLabelThongBaoRong();
                jListCacTramDiQua.setEnabled(false);
                jlTram.setEnabled(false);
//                tuyenDao.getTuyenTuBang(hangDangChon, jtbTuyen, jtfMaTuyen, jtfTenTuyen, jtaCacTramDiQua, jtaKhoangCach);
                break;
        }
        jlbTenDialog.setText(tenDialog);
        jdlThuocTinhTuyen.setLocationRelativeTo(this);
        jdlThuocTinhTuyen.setVisible(true);
    }

    private void setLabelThongBao() {
        jlbMaTuyen.setText("Không được để trống");
        jlbCacTramDiQua.setText("Không được để trống");
    }

    private void setLabelThongBaoRong() {
        jlbMaTuyen.setText(" ");
        jlbTenTuyen.setText(" ");
        jlbCacTramDiQua.setText(" ");
    }

   

    private void kiemTraJTFMaTuyen() {
        String maTuyen = jtfMaTuyen.getText().trim();
        if (maTuyen.equals("")) {
            jlbMaTuyen.setText("Không được để trống");
        } else {// kiểm tra mã có bị trùng không
            try {
                ResultSet rs = LopKetNoi.select("select * from tuyen where maTuyen = ?", maTuyen);
                if (rs.next()) {
                    jlbMaTuyen.setText("Mã bị trùng");
                } else {
                    jlbMaTuyen.setText(" ");
                }
            } catch (Exception e) {
            }
        }
    }

    private void kiemTraJTFTenTuyen() {
        String tenTuyen = jtfTenTuyen.getText().trim();
        if (tenTuyen.equals("")) {
            jlbTenTuyen.setText("Không được để trống");
        } else {
            try {
                ResultSet rs = LopKetNoi.select("select * from tuyen where tenTuyen = ?", tenTuyen);
                if (rs.next()) {
                    jlbCacTramDiQua.setText("Tên bị trùng");
                } else {
                    jlbCacTramDiQua.setText(" ");
                }
            } catch (Exception e) {
            }
        }
    }

//    private boolean kiemTraTramDiQuaDB() {
//        ArrayList<String> DSTramDiQuaNhap = getCacTramDiQua();
//        try {
//            ResultSet rs = LopKetNoi.select("select maTuyen from tuyen");
//            while (rs.next()) {
//                ResultSet rs1 = LopKetNoi.select("select tenTram from tuyendiquatram where matuyen = ? order by STT", rs.getString(1));
//                ArrayList<String> DSTram = new ArrayList<>();
//                while (rs1.next()) {
//                    DSTram.add(rs1.getString(1));
//                }
//                if (DSTram.equals(DSTramDiQuaNhap)) {
//                    return false;
//                }
//            }
//        } catch (Exception e) {
//        }
//        return true;
//    }

    private void kiemTraJLCacTramDiQua() {
        if (jListCacTramDiQuaModel.size()<2)
        {
            jlbCacTramDiQua.setText("Không được để trống! Tuyến phải đi qua ít nhất 2 Trạm");
        }
        else
        {
            jlbCacTramDiQua.setText(" ");
        }
    }

    private void kiemTraThongTinNhap(String loai) {
        loai.toLowerCase();
        switch (loai) {
            case "mã tuyến":
                kiemTraJTFMaTuyen();
                break;
            case "tên tuyến":
                kiemTraJTFTenTuyen();
                break;
            case "các trạm đi qua":
                kiemTraJLCacTramDiQua();
                break;
            case "khoảng cách":
                //kiemTraJTAThoiGian();
                break;
        }

    }

    private boolean kiemTraTruocKhiXacNhan(String loai) {
        if (!loai.equals("sửa tuyến")) kiemTraJTFMaTuyen();
        kiemTraJTFTenTuyen();
        kiemTraJLCacTramDiQua();
        if (jlbMaTuyen.getText().equals(" ") && jlbTenTuyen.getText().equals(" ")
                && jlbCacTramDiQua.getText().equals(" ")) {
            return true;
        } else {
            return false;
        }
    }

    private ArrayList<String> getCacTramDiQua() {
        ArrayList<String> tam = new ArrayList<>();
        for (int i=0; i<jListCacTramDiQuaModel.size();i++) {
            tam.add(jListCacTramDiQuaModel.getElementAt(i).toString());
        }
        return tam;
    }
//
//    private ArrayList<Float> getKhoangCach() {
//        String[] khoangCach = jtaKhoangCach.getText().trim().split("\\s*-\\s*");
//        ArrayList<Float> tam = new ArrayList<>();
//        for (String s : khoangCach) {
//            try {
//                tam.add(Float.parseFloat(s));
//            } catch (Exception e) {
//                return null;
//            }
//        }
//        return tam;
//    }
//
    private Tuyen getTuyenTuDialog() {
        String maTuyen = jtfMaTuyen.getText().trim().toUpperCase();
        String tenTuyen = jtfTenTuyen.getText().trim().toUpperCase();
        return new Tuyen(maTuyen, tenTuyen);
    }

    private void setRong() {
        jtfMaTuyen.setText("");
        jtfTenTuyen.setText("");
        jListCacTramDiQuaModel.removeAllElements();
    }
//
//    private void timKiemTram() {
//        String[] cacTramDiQua = jtaCacTramDiQua.getText().trim().split("\\s*-\\s*");
//        lmTram.setSize(0);
//        String tenTram = cacTramDiQua[cacTramDiQua.length - 1];
//        try {
//            ResultSet rs = LopKetNoi.select("select tenTram from tram where tenTram like ?", "%" + tenTram + "%");
//            while (rs.next()) {
//                lmTram.addElement(rs.getString(1));
//            }
//        } catch (Exception e) {
//        }
//        jlTram.setModel(lmTram);
//    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        jListCacTramDiQuaModel.removeAllElements();
        lmTram.removeAllElements();
        hienThiDialog("THÊM TUYẾN");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        jListCacTramDiQua.removeAll();
        jlTram.removeAll();
        if (hangDangChon < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đối tượng! Vui lòng chọn 1 dòng trong bảng");
        } else {
            String maTuyen = jtbTuyen.getValueAt(hangDangChon, 0).toString();
            String strThoiGianHieuChinhTuyen=jtbTuyen.getValueAt(hangDangChon, 2).toString();
            java.sql.Timestamp tsThoiGianHieuChinhTuyenMax=null;
            try {
                ResultSet rs=ketNoiCSDL.select("select MAX(ThoiGianHieuChinh) from Tuyen where MaTuyen=?",maTuyen);
                if (rs.next())
                {
                    tsThoiGianHieuChinhTuyenMax=rs.getTimestamp(1);
                }
                rs=ketNoiCSDL.select("select MaChuyen from ChuyenDi where ID_TCT in (select ID_TCT from TauChayTuyen\n" +
                "where MaTuyen=? and ThoiGianHieuChinh=?)",maTuyen,strThoiGianHieuChinhTuyen);
                if (rs.next())
                {
                    if (strThoiGianHieuChinhTuyen.equals(tsThoiGianHieuChinhTuyenMax.toString()))
                    {
                        //bằng max thì insert
                        chucNangSua=1;
                        hienThiDialog("SỬA TUYẾN");
                    }
                    else
                    {
                        //không sửa vì đã đặt vé
                        chucNangSua=-1;
                        JOptionPane.showMessageDialog(this, "Không sửa được vì đã đặt vé!");
                    }
                }
                else
                {
                    //được update vì chưa thêm vào vé
                    chucNangSua=0;
                    hienThiDialog("SỬA TUYẾN");
                }
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("Không tìm được Thời gian thời gian hiệu chỉnh MAX hoặc Lỗi kiểm tra Tuyến đã được đặt vé chưa");
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void jtbTuyenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTuyenMousePressed
        // TODO add your handling code here:
        hangDangChon = jtbTuyen.getSelectedRow();
        if (hangDangChon != -1) {
            if (evt.getButton() == MouseEvent.BUTTON3) {
                hienThiDialog("THÔNG TIN TUYẾN");
            }
        }

    }//GEN-LAST:event_jtbTuyenMousePressed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (hangDangChon < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đối tượng! Vui lòng chọn 1 hàng trong bảng");

        } else {
            int input = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa không?", "Cảnh báo", JOptionPane.YES_NO_OPTION);
            if (input == JOptionPane.YES_OPTION) {
                String maTuyen = jtbTuyen.getValueAt(hangDangChon, 0).toString();
                boolean kt = tuyenDao.xoaTuyenTrongDB(maTuyen, ketNoiCSDL);
                if (kt) {
                    tuyenDao.xoaTramKhoiBang(hangDangChon, tbmBangTuyen);
                    hangDangChon = -1;
                    jtbTuyen.clearSelection();
                } else {
                    JOptionPane.showMessageDialog(this, "Không thể xóa vì có tàu đang chạy trên tuyến này");
                }
            }
        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jtfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKiemKeyReleased
        // TODO add your handling code here:

        if (cbbTimKiem.getSelectedIndex() == 0) {// tim kiem theo ma tuyen
            String maTuyen = jtfTimKiem.getText().trim();
            tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from tuyen where maTuyen like ?",
                    "%" + maTuyen + "%"), tbmBangTuyen);
        } else {// tim kiem theo ten tuyen
            String tenTuyen = jtfTimKiem.getText().trim();
            tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from tuyen where tenTuyen like ?",
                    "%" + tenTuyen + "%"), tbmBangTuyen);
        }
    }//GEN-LAST:event_jtfTimKiemKeyReleased

    private void cbbSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSapXepActionPerformed
        // TODO add your handling code here:
        if (cbbSapXep.getSelectedIndex() == 0) {// sap xep ten tuyen tu a - z
            tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from tuyen order by tentuyen ASC"), tbmBangTuyen);
        } else {
            tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from tuyen order by tentuyen DESC"), tbmBangTuyen);
        }
    }//GEN-LAST:event_cbbSapXepActionPerformed

    private void jtbTuyenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTuyenMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jtbTuyenMouseClicked

    private void btnThongTInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTInActionPerformed
        // TODO add your handling code here:
        jListCacTramDiQuaModel.removeAllElements();
        lmTram.removeAllElements();
        if (hangDangChon == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 hàng trong bảng");
        } else
            hienThiDialog("THÔNG TIN TUYẾN");
    }//GEN-LAST:event_btnThongTInActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new ChuyenManHinhView(this, new JPanelQuanLiTuyen()).change();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
        //Thêm Tuyến
        String loai = jlbTenDialog.getText().toLowerCase();
        Tuyen tuyen = getTuyenTuDialog();
        KhoangCachTram khoangCachTram;
        boolean isOk=true;
            switch (loai) {
                case "thêm tuyến":
                jTableKhoangCach.editCellAt(0, 0);//để bỏ chọn ô đang chọn, table mới save được ô mới nhập
                SimpleDateFormat formater=new SimpleDateFormat("HH:mm");
                for (int i:DSKhoangCachConThieu)
                {
                    khoangCachTram=new KhoangCachTram();
                    try {
                        String tempKhoangThoiGian=jTableKhoangCachModel.getValueAt(i, 2).toString();
                        Time timeKhoangThoiGian= new Time(formater.parse(tempKhoangThoiGian).getTime());
                        khoangCachTram.setKhoangThoiGian(timeKhoangThoiGian);
                        khoangCachTram.setTenTramNay(jTableKhoangCachModel.getValueAt(i, 0).toString());
                        khoangCachTram.setTenTramKia(jTableKhoangCachModel.getValueAt(i, 1).toString());
                        tuyenDao.themKhoangCachVaoDB(khoangCachTram);
                    } catch (Exception e) {
                        e.printStackTrace();
                        isOk=false;
                        JOptionPane.showMessageDialog(this, "Nhập khoảng thời gian đúng định dạng HH:mm và không được để trống!");
                    }
                    
                }
                if (isOk)
                {
                    jdlNhapKhoangCach.dispose();
                    jdlThuocTinhTuyen.dispose();
                }

                //                    setRong();
                //                    setLabelThongBao();
                //                    jtfMaTuyen.requestFocus();
                break;
                case "sửa tuyến":
                jTableKhoangCach.editCellAt(0, 0);//để bỏ chọn ô đang chọn, table mới save được ô mới nhập
                formater=new SimpleDateFormat("hh:mm");
                for (int i:DSKhoangCachConThieu)
                {
                    khoangCachTram=new KhoangCachTram();
                    try {
                        String tempKhoangThoiGian=jTableKhoangCachModel.getValueAt(i, 2).toString();
                        Time timeKhoangThoiGian= new Time(formater.parse(tempKhoangThoiGian).getTime());
                        khoangCachTram.setKhoangThoiGian(timeKhoangThoiGian);
                        khoangCachTram.setTenTramNay(jTableKhoangCachModel.getValueAt(i, 0).toString());
                        khoangCachTram.setTenTramKia(jTableKhoangCachModel.getValueAt(i, 1).toString());
                        tuyenDao.themKhoangCachVaoDB(khoangCachTram);
                    } catch (Exception e) {
                        e.printStackTrace();
                        isOk=false;
                        JOptionPane.showMessageDialog(this, "Nhập khoảng thời gian đúng định dạng hh:mm và không được để trống!");
                    }
                }
                if (isOk)
                {
                    jdlNhapKhoangCach.dispose();
                    jdlThuocTinhTuyen.dispose();
                }
                break;
            }
        
        
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnTiepTucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTiepTucActionPerformed
        // TODO add your handling code here:

        String loai = jlbTenDialog.getText().toLowerCase();
        if (kiemTraTruocKhiXacNhan(loai)) {
            Tuyen tuyen = getTuyenTuDialog();
            switch (loai) {
                case "thêm tuyến":
                java.sql.Timestamp tsThoiGianHieuChinh=new java.sql.Timestamp(System.currentTimeMillis());
                tuyen.setThoiGianHieuChinh(tsThoiGianHieuChinh);
                if (tuyenDao.themTuyenVaoDB(tuyen,tsThoiGianHieuChinh))
                {
                    //Thêm Tuyến đi qua trạm vào DB
                    for (int i=0;i<jListCacTramDiQuaModel.size();i++)
                    {
                        TuyenDiQuaTram tempTuyenDiQuaTram=new TuyenDiQuaTram();
                        tempTuyenDiQuaTram.setMaTuyen(tuyen.getMaTuyen());
                        tempTuyenDiQuaTram.setTenTram(jListCacTramDiQuaModel.getElementAt(i).toString());
                        tempTuyenDiQuaTram.setSTT(i+1);
                        ketNoiCSDL.addTuyenDiQuaTram(tempTuyenDiQuaTram,tsThoiGianHieuChinh);
                    }
                    tuyenDao.themTuyenVaoBang(tuyen, jtbTuyen);
                    hangDangChon = jtbTuyen.getRowCount() - 1;
                    //                    setRong();
                    //                    setLabelThongBao();
                    //                    jtfMaTuyen.requestFocus();
                    jTableKhoangCachModel=new MyDefaultTableModel(jListCacTramDiQuaModel.getSize()-1,3);//vì có 4 Trạm đi qua thì có 4-1 row khoảng cách trong bảng Khoảng Cách
                    jTableKhoangCachModel.setDataVector(new Object[][]{}, new String[] {"Tên Trạm Này","Tên Trạm Kia","Khoảng Thời Gian"});
                    jTableKhoangCach.setModel(jTableKhoangCachModel);
                    DSKhoangCachConThieu=new ArrayList<Integer>();
                    for (int i=0;i<=jListCacTramDiQuaModel.getSize()-2;i++)
                    {
                        String tenTramNay=jListCacTramDiQuaModel.getElementAt(i).toString();
                        String tenTramKia=jListCacTramDiQuaModel.getElementAt(i+1).toString();
                        Time khoangThoiGian=tuyenDao.getKhoangCach(tenTramNay, tenTramKia);
                        if (khoangThoiGian!=null)
                        {
                            String strKhoangThoiGian=khoangThoiGian.toString();
                            strKhoangThoiGian=strKhoangThoiGian.substring(0, strKhoangThoiGian.length()-3);  //bỏ mili giây
                            jTableKhoangCachModel.addRow(new Object[] {tenTramNay,tenTramKia,strKhoangThoiGian});
                        }
                        else
                        {
                            jTableKhoangCachModel.addRow(new Object[] {tenTramNay,tenTramKia,""});
                            jTableKhoangCachModel.setCellEditable(i, 2, true);
                            DSKhoangCachConThieu.add(i);
                        }
                    }
                    jdlNhapKhoangCach.setLocationRelativeTo(this);
                    jdlNhapKhoangCach.setVisible(true);
                }
                else
                {
                    jlbMaTuyen.setText("Mã Tuyến bị trùng!");
                }
                break;
                case "sửa tuyến":
                String strThoiGianHieuChinh=jtbTuyen.getValueAt(hangDangChon, 2).toString();
                if (chucNangSua==1)
                {
                    //bằng 1 thì insert
                    java.sql.Timestamp thoiGianHieuChinhTauMoi=new java.sql.Timestamp(System.currentTimeMillis());
                    ketNoiCSDL.update("insert into Tuyen) values(?,?,?)",tuyen.getMaTuyen(),thoiGianHieuChinhTauMoi,tuyen.getTenTuyen());
                    tuyenDao.loadDSTuyenVaoBang(ketNoiCSDL.select("select MaTuyen,ThoiGianHieuChinh from Tuyen\n" +
                    "group by MaTuyen,ThoiGianHieuChinh"), tbmBangTuyen);
                    hangDangChon++;
                    jtbTuyen.setRowSelectionInterval(hangDangChon, hangDangChon);
                    for (int i=0;i<jListCacTramDiQuaModel.size();i++)
                    {
                        ketNoiCSDL.update("insert into TuyenDiQuaTram(MaTuyen, TenTram, ThoiGianHieuChinh,STT) values(?,?,?,?)",tuyen.getMaTuyen(),jListCacTramDiQuaModel.getElementAt(i),thoiGianHieuChinhTauMoi,i+1);
                    }
                }
                else
                {
                    if (chucNangSua==0)
                    {
                        //được update vì chưa thêm vào vé
                        ketNoiCSDL.update("delete from TuyenDiQuaTram where MaTuyen=? and ThoiGianHieuChinh=?",tuyen.getMaTuyen(),strThoiGianHieuChinh);
                        for (int i=0;i<jListCacTramDiQuaModel.size();i++)
                        {
                            ketNoiCSDL.update("insert into TuyenDiQuaTram(MaTuyen, TenTram, ThoiGianHieuChinh,STT) values(?,?,?,?)",tuyen.getMaTuyen(),jListCacTramDiQuaModel.getElementAt(i),strThoiGianHieuChinh,i+1);
                        }
                    }
                }
                
                jTableKhoangCachModel=new MyDefaultTableModel(jListCacTramDiQuaModel.getSize()-1,3);//vì có 4 Trạm đi qua thì có 4-1 row khoảng cách trong bảng Khoảng Cách
                    jTableKhoangCachModel.setDataVector(new Object[][]{}, new String[] {"Tên Trạm Này","Tên Trạm Kia","Khoảng Thời Gian"});
                    jTableKhoangCach.setModel(jTableKhoangCachModel);
                    DSKhoangCachConThieu=new ArrayList<Integer>();
                    for (int i=0;i<=jListCacTramDiQuaModel.getSize()-2;i++)
                    {
                        String tenTramNay=jListCacTramDiQuaModel.getElementAt(i).toString();
                        String tenTramKia=jListCacTramDiQuaModel.getElementAt(i+1).toString();
                        Time khoangThoiGian=tuyenDao.getKhoangCach(tenTramNay, tenTramKia);
                        if (khoangThoiGian!=null)
                        {
                            String strKhoangThoiGian=khoangThoiGian.toString();
                            strKhoangThoiGian=strKhoangThoiGian.substring(0, strKhoangThoiGian.length()-3);  //bỏ mili giây
                            jTableKhoangCachModel.addRow(new Object[] {tenTramNay,tenTramKia,strKhoangThoiGian});
                        }
                        else
                        {
                            jTableKhoangCachModel.addRow(new Object[] {tenTramNay,tenTramKia,""});
                            jTableKhoangCachModel.setCellEditable(i, 2, true);
                            DSKhoangCachConThieu.add(i);
                        }
                    }
                    jdlNhapKhoangCach.setLocationRelativeTo(this);
                    jdlNhapKhoangCach.setVisible(true);
                break;
            }
        } else {
            if (!loai.equalsIgnoreCase("thông tin tuyến")) {// neu khong phai thong tin tuyen thi ỉn ra
                JOptionPane.showMessageDialog(jdlThuocTinhTuyen, jlbTenDialog.getText() + " thất bại");
            }
        }
    }//GEN-LAST:event_btnTiepTucActionPerformed

    private void jtfTenTuyenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTenTuyenKeyReleased
        // TODO add your handling code here:
        //        kiemTraThongTinNhap("tên tuyến");
    }//GEN-LAST:event_jtfTenTuyenKeyReleased

    private void jtfTenTuyenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTenTuyenKeyPressed
        // TODO add your handling code here:
        if (jlbTenDialog.getText().equalsIgnoreCase("thêm tuyến")) {
            if (evt.getKeyCode() == KeyEvent.VK_UP) {
                jtfMaTuyen.requestFocus();
            }
        }
    }//GEN-LAST:event_jtfTenTuyenKeyPressed

    private void jtfTenTuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTenTuyenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTenTuyenActionPerformed

    private void jtfMaTuyenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfMaTuyenKeyReleased
        // TODO add your handling code here:
        //        kiemTraThongTinNhap("mã tuyến");
    }//GEN-LAST:event_jtfMaTuyenKeyReleased

    private void jtfMaTuyenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfMaTuyenKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtfTenTuyen.requestFocus();
        }
    }//GEN-LAST:event_jtfMaTuyenKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThongTIn;
    private javax.swing.JButton btnTiepTuc;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbSapXep;
    private javax.swing.JComboBox<String> cbbTimKiem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListCacTramDiQua;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableKhoangCach;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JDialog jdlNhapKhoangCach;
    private javax.swing.JDialog jdlThuocTinhTuyen;
    private javax.swing.JList<String> jlTram;
    private javax.swing.JLabel jlbCacTramDiQua;
    private javax.swing.JLabel jlbMaTuyen;
    private javax.swing.JLabel jlbTenDialog;
    private javax.swing.JLabel jlbTenTuyen;
    private javax.swing.JTable jtbTuyen;
    private javax.swing.JTextField jtfMaTuyen;
    private javax.swing.JTextField jtfTenTuyen;
    private javax.swing.JTextField jtfTimKiem;
    // End of variables declaration//GEN-END:variables
}
