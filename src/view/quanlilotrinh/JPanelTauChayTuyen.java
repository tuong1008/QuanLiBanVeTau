/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.quanlilotrinh;

import connectSQL.LopKetNoi;
import controller.ChuyenManHinhView;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Comparator;
import view.JPanelQuanLiLoTrinh;
import module.SampleDateVetoPolicy;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings;
import com.github.lgooddatepicker.optionalusertools.PickerUtilities;
import java.text.Collator;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import javax.swing.JFrame;
import module.ComboboxToolTipRenderer;
/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class JPanelTauChayTuyen extends javax.swing.JPanel {

    /**
     * Creates new form JPanelTauChayTuyen
     */
    // loai button
    private String them = "THÊM TÀU";
    private String sua = "SỬA TÀU";
    
    
    private LopKetNoi ketNoiCSDL;
    private DefaultTableModel tbmTau;
    private int hangDangChon = -1;
    TimePickerSettings timeSettings;
    TableRowSorter<DefaultTableModel> trsTauChayTuyen;
    DatePickerSettings dateSettings;
    public JPanelTauChayTuyen() {
        dateSettings = new DatePickerSettings();
        dateSettings.setFormatForDatesCommonEra("yyyy-MM-dd");
        timeSettings = new TimePickerSettings();
        timeSettings.setDisplaySpinnerButtons(true);
        timeSettings.setFormatForDisplayTime(PickerUtilities.createFormatterFromPatternString(
            "HH:mm:ss", timeSettings.getLocale()));
        timeSettings.setFormatForMenuTimes(PickerUtilities.createFormatterFromPatternString(
            "HH:mm", timeSettings.getLocale()));
        timeSettings.setInitialTimeToNow();
        initComponents();
        tbmTau = (DefaultTableModel) jtbTau.getModel();
        trsTauChayTuyen =new TableRowSorter<>(tbmTau);
        trsTauChayTuyen.setComparator(0, new Comparator<String>
        () {
            @Override
            public int compare(String o1, String o2) {
                Collator collator = Collator.getInstance( new Locale("vi","VN"));
                return collator.compare(o1,o2);
            }
        });
        trsTauChayTuyen.setComparator(2, new Comparator<String>
        () {
            @Override
            public int compare(String o1, String o2) {
                Collator collator = Collator.getInstance( new Locale("vi","VN"));
                return collator.compare(o1,o2);
            }
        });
        jtbTau.setRowSorter(trsTauChayTuyen);
        ketNoiCSDL=new LopKetNoi();
        loadBangTau(ketNoiCSDL.select("select * from TauChayTuyen"));
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdlTauChayTuyen = new javax.swing.JDialog((JFrame) null, true);
        jPanel2 = new javax.swing.JPanel();
        jlbTenDialog = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnXacNhan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jlbMaTau = new javax.swing.JLabel();
        cbbTuyen = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jlbThoiGianKhoiHanh = new javax.swing.JLabel();
        cbbMaTau = new javax.swing.JComboBox<>();
        datePickerThoiGianKhoiHanh = new com.github.lgooddatepicker.components.DatePicker(dateSettings);
        timePickerThoiGianKhoiHanh = new com.github.lgooddatepicker.components.TimePicker(timeSettings);
        jLabel1 = new javax.swing.JLabel();
        jSpinnerStep = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jtbTau = new javax.swing.JTable();
        jLabel50 = new javax.swing.JLabel();
        btnThem1 = new javax.swing.JButton();
        btnSua1 = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jtfTimKiem1 = new javax.swing.JTextField();
        btnTroVe1 = new javax.swing.JButton();
        jSeparator25 = new javax.swing.JSeparator();
        jSeparator26 = new javax.swing.JSeparator();

        jdlTauChayTuyen.setMinimumSize(new java.awt.Dimension(574, 467));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(574, 467));

        jlbTenDialog.setText("THÊM TÀU");
        jlbTenDialog.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        jLabel3.setText("Mã tàu:");
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnXacNhan.setText("XÁC NHẬN");
        btnXacNhan.setBackground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        jLabel6.setText("Chọn Tuyến");
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jlbMaTau.setText(" a");
        jlbMaTau.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jlbMaTau.setForeground(new java.awt.Color(255, 51, 0));

        jLabel7.setText("Thời gian khởi hành:");
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jlbThoiGianKhoiHanh.setText("a");
        jlbThoiGianKhoiHanh.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jlbThoiGianKhoiHanh.setForeground(new java.awt.Color(255, 51, 0));

        dateSettings.setVetoPolicy(new SampleDateVetoPolicy());

        jLabel1.setText("Bước nhảy:");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jSpinnerStep.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbMaTau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlbThoiGianKhoiHanh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbTuyen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbMaTau, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(datePickerThoiGianKhoiHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timePickerThoiGianKhoiHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jlbTenDialog))
                            .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSpinnerStep, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(133, 133, 133))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbTenDialog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbbMaTau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbMaTau)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbbTuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(datePickerThoiGianKhoiHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timePickerThoiGianKhoiHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jlbThoiGianKhoiHanh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinnerStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jdlTauChayTuyenLayout = new javax.swing.GroupLayout(jdlTauChayTuyen.getContentPane());
        jdlTauChayTuyen.getContentPane().setLayout(jdlTauChayTuyenLayout);
        jdlTauChayTuyenLayout.setHorizontalGroup(
            jdlTauChayTuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jdlTauChayTuyenLayout.setVerticalGroup(
            jdlTauChayTuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jdlTauChayTuyenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel49.setText("PHÂN CÔNG TÀU");
        jLabel49.setBackground(new java.awt.Color(255, 255, 255));
        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jtbTau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ TÀU", "THỜI GIAN HIỆU CHỈNH TÀU", "MÃ TUYẾN", "THỜI GIAN HIỆU CHỈNH TUYẾN", "THỜI GIAN KHỞI HÀNH", "THỜI GIAN ĐẾN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbTau.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtbTau.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtbTau.setGridColor(new java.awt.Color(255, 255, 255));
        jtbTau.setRowHeight(25);
        jtbTau.setSelectionBackground(new java.awt.Color(51, 204, 255));
        jScrollPane13.setViewportView(jtbTau);
        if (jtbTau.getColumnModel().getColumnCount() > 0) {
            jtbTau.getColumnModel().getColumn(0).setResizable(false);
            jtbTau.getColumnModel().getColumn(0).setPreferredWidth(75);
            jtbTau.getColumnModel().getColumn(1).setResizable(false);
            jtbTau.getColumnModel().getColumn(1).setPreferredWidth(223);
            jtbTau.getColumnModel().getColumn(2).setResizable(false);
            jtbTau.getColumnModel().getColumn(2).setPreferredWidth(75);
            jtbTau.getColumnModel().getColumn(3).setResizable(false);
            jtbTau.getColumnModel().getColumn(3).setPreferredWidth(223);
            jtbTau.getColumnModel().getColumn(4).setResizable(false);
            jtbTau.getColumnModel().getColumn(4).setPreferredWidth(222);
            jtbTau.getColumnModel().getColumn(5).setResizable(false);
            jtbTau.getColumnModel().getColumn(5).setPreferredWidth(222);
        }

        jLabel50.setText("Chức năng");
        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnThem1.setText("THÊM");
        btnThem1.setBackground(new java.awt.Color(255, 255, 255));
        btnThem1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        btnSua1.setText("SỬA");
        btnSua1.setBackground(new java.awt.Color(255, 255, 255));
        btnSua1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua1ActionPerformed(evt);
            }
        });

        btnXoa1.setText("XÓA");
        btnXoa1.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        jLabel51.setText("Tìm kiếm:");
        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jtfTimKiem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimKiem1KeyReleased(evt);
            }
        });

        btnTroVe1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outline_arrow_back_black_24dp_1.png"))); // NOI18N
        btnTroVe1.setBackground(new java.awt.Color(255, 255, 255));
        btnTroVe1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTroVe1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator25, javax.swing.GroupLayout.PREFERRED_SIZE, 991, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel50)
                        .addGap(49, 49, 49)
                        .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206)
                        .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnTroVe1)
                                .addGap(376, 376, 376)
                                .addComponent(jLabel49))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator26)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel51)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnTroVe1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel49)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator25, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator26, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void loadBangTau(ResultSet rs) {

        DefaultTableModel model = (DefaultTableModel) jtbTau.getModel();
        model.setRowCount(0);
        try {
            while (rs.next()) {
                String maTau = rs.getString(2);
                java.sql.Timestamp tsThoiGianHieuChinhTau = rs.getTimestamp(3);
                String maTuyen = rs.getString(4);
                java.sql.Timestamp tsThoiGianHieuChinh = rs.getTimestamp(5);
                java.sql.Timestamp tsThoiGianKhoiHanh = rs.getTimestamp(6);
                java.sql.Timestamp tsThoiGianDen = rs.getTimestamp(7);
                model.addRow(new Object[]{maTau,tsThoiGianHieuChinhTau, maTuyen,tsThoiGianHieuChinh, tsThoiGianKhoiHanh,tsThoiGianDen});
            }
        } catch (Exception e) {
            System.out.println("Load bảng tàu thất bại!");
            e.printStackTrace();
        }
    }
    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        // TODO add your handling code here:
        hienThiDialog(them);
    }//GEN-LAST:event_btnThem1ActionPerformed
    private int kiemTraThemTau(LopKetNoi ketNoiCSDL,String maTau, String maTuyen, java.sql.Timestamp tsThoiGianKhoiHanh, java.sql.Timestamp tsThoiGianDen,String tsThoiGianHieuChinhTau, String tsThoiGianHieuChinhTuyen) {
        // kiem tra thời gian khởi hành và thời gian đến
        ArrayList<java.sql.Timestamp> DSThoiGianDiVaDen=new ArrayList<java.sql.Timestamp>();
        try {
            ResultSet rs =ketNoiCSDL.select("select * from TauChayTuyen where MaTau=? and MaTuyen=? and ThoiGianKhoiHanh=? and ThoiGianDen=? and ThoiGianHieuChinhTau=? and ThoiGianHieuChinh=?",maTau,maTuyen,tsThoiGianKhoiHanh,tsThoiGianDen,tsThoiGianHieuChinhTau,tsThoiGianHieuChinhTuyen);
            if (rs.next())
            {
                return 0;// đã tồn tại, không cần xoá
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Kiểm tra TauChayTuyen đã có trong CSDL chưa");
        }
        try {
            LopKetNoi.update("insert into TauChayTuyen(MaTau,MaTuyen,ThoiGianKhoiHanh,ThoiGianDen,ThoiGianHieuChinhTau,ThoiGianHieuChinh) values(?,?,?,?,?,?)", maTau,maTuyen,tsThoiGianKhoiHanh,tsThoiGianDen,tsThoiGianHieuChinhTau,tsThoiGianHieuChinhTuyen);
            ResultSet rs =ketNoiCSDL.select("select ThoiGianKhoiHanh,ThoiGianDen from TauChayTuyen\n" +
                            "where MaTau=? order by ThoiGianKhoiHanh asc",maTau);
            while (rs.next())
            {
                DSThoiGianDiVaDen.add(rs.getTimestamp(1));
                DSThoiGianDiVaDen.add(rs.getTimestamp(2));
            }
            //nếu thời gian trong arraylist tăng thì thời gian tàu chạy k bị chồng
            for (int i=0;i<=DSThoiGianDiVaDen.size()-2;i++)
            {
                if (DSThoiGianDiVaDen.get(i).compareTo(DSThoiGianDiVaDen.get(i+1))>0) return -1;//k thoả điều kiện, cần xoá
            }
            return 1;//thoả điều kiện thêm
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Thêm TauChayTuyen mới hoặc get DSThoiGianDiVaDen bị lỗi");
        }
        return -2;
        


//        if (jlbMaTau.getText().equals(" ") && jlbThoiGianKhoiHanh.getText().equals(" ")) {
//            return true;
//        } else {
//            return false;
//        }

    }
    private void btnSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua1ActionPerformed
        // TODO add your handling code here:
        hangDangChon=jtbTau.getSelectedRow();
        int ID_TCT=-1;
        String maTauCu=jtbTau.getValueAt(hangDangChon, 0).toString();
        String strThoiGianHieuChinhTau=jtbTau.getValueAt(hangDangChon, 1).toString();
        String maTuyenCu=jtbTau.getValueAt(hangDangChon, 2).toString();
        String strThoiGianHieuChinhTuyen=jtbTau.getValueAt(hangDangChon, 3).toString();
        String strThoiGianKhoiHanh=jtbTau.getValueAt(hangDangChon, 4).toString();
        String strThoiGianDen=jtbTau.getValueAt(hangDangChon, 5).toString();
        hangDangChon=jtbTau.getSelectedRow();
        if (hangDangChon < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đối tượng! Vui lòng chọn 1 dòng trong bảng");
        } else {
            SimpleDateFormat formatter=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            try {
                ResultSet rs=LopKetNoi.select("select * from TauChayTuyen where MaTau=? and ThoiGianHieuChinhTau=? and MaTuyen=? and ThoiGianHieuChinh=? and ThoiGianKhoiHanh=? and ThoiGianDen=?",maTauCu, strThoiGianHieuChinhTau, maTuyenCu, strThoiGianHieuChinhTuyen, strThoiGianKhoiHanh,strThoiGianDen);
                if (rs.next())
                {
                    ID_TCT=rs.getInt(1);
                }
                java.sql.Timestamp tempThoiGianKhoiHanh=new java.sql.Timestamp(formatter.parse(strThoiGianKhoiHanh).getTime());
                rs=ketNoiCSDL.select("select * from ChuyenDi where ID_TCT=?",ID_TCT);
                if (rs.next())
                {
                    JOptionPane.showMessageDialog(this, "Đã có Vé đặt Tàu chạy tuyến này, không thể sửa!");
                }
                else
                {
                    hienThiDialog(sua);
                }
            } catch (Exception e) {
                System.out.println("Lỗi lúc bấm nút sửa");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSua1ActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        // TODO add your handling code here:
        hangDangChon = jtbTau.getSelectedRow();
        if (hangDangChon < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đối tượng! Vui lòng chọn 1 hàng trong bảng");

        } else {
            int input = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa không?", "Cảnh báo", JOptionPane.YES_NO_OPTION);
            if (input == JOptionPane.YES_OPTION) {
                SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                String maTau=jtbTau.getValueAt(hangDangChon, 0).toString();
                String maTuyen=jtbTau.getValueAt(hangDangChon, 2).toString();
                String strThoiGianKhoiHanh=jtbTau.getValueAt(hangDangChon, 4).toString();
                
                try {
                    if (ketNoiCSDL.update("delete from TauChayTuyen where MaTau=? and MaTuyen=? and ThoiGianKhoiHanh=?",maTau,maTuyen,strThoiGianKhoiHanh)) {
                        tbmTau.removeRow(hangDangChon);
                        hangDangChon = -1;
                        jtbTau.clearSelection();
                    } else {
                        JOptionPane.showMessageDialog(this, "Không thể xóa vì có tàu đang chạy");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void jtfTimKiem1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKiem1KeyReleased
        // TODO add your handling code here:
        trsTauChayTuyen.setRowFilter(RowFilter.regexFilter(jtfTimKiem1.getText().toUpperCase().trim()));
    }//GEN-LAST:event_jtfTimKiem1KeyReleased

    private void btnTroVe1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTroVe1ActionPerformed
        // TODO add your handling code here:
        new ChuyenManHinhView(this, new JPanelQuanLiLoTrinh()).change();
    }//GEN-LAST:event_btnTroVe1ActionPerformed
    private boolean themTau(LopKetNoi ketNoiCSDL) {
        SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd HH:mm");
        String maTau=null;
        String maTuyen=null;
        java.sql.Timestamp tsThoiGianHieuChinhTau=null;
        java.sql.Timestamp tsThoiGianHieuChinhTuyen=null;
        java.sql.Timestamp tsThoiGianKhoiHanh=null;
        java.sql.Timestamp tsThoiGianDen=null;
        try {
            String strThoiGianKhoiHanh=datePickerThoiGianKhoiHanh.toString()+" "+timePickerThoiGianKhoiHanh.toString();
            tsThoiGianKhoiHanh=(new java.sql.Timestamp(formatter.parse(strThoiGianKhoiHanh).getTime()));
            if (tsThoiGianKhoiHanh.compareTo(new java.sql.Timestamp(System.currentTimeMillis()))>0)
            {
                maTau = cbbMaTau.getSelectedItem().toString();
                maTuyen = cbbTuyen.getSelectedItem().toString();
                ResultSet rs = LopKetNoi.select("select MAX(ThoiGianHieuChinhTau) as ThoiGianHieuChinhMax from Tau\n"
                        + "where MaTau=?", maTau);
                if (rs.next()) {
                    tsThoiGianHieuChinhTau = rs.getTimestamp(1);
                }
                rs = LopKetNoi.select("select MAX(ThoiGianHieuChinh) as ThoiGianHieuChinhMax from Tuyen\n"
                        + "where MaTuyen=?", maTuyen);
                if (rs.next()) {
                    tsThoiGianHieuChinhTuyen = rs.getTimestamp(1);
                }
                tsThoiGianKhoiHanh = new java.sql.Timestamp(formatter.parse(strThoiGianKhoiHanh).getTime());
                rs = LopKetNoi.select("select [dbo].[tinhThoiGianDenCuaTau](?,?,?)", maTuyen, tsThoiGianHieuChinhTuyen, tsThoiGianKhoiHanh);
                if (rs.next()) {
                    tsThoiGianDen = rs.getTimestamp(1);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Thời gian khởi hành phải lớn hơn hiện tại");
                return false;
            }
        } catch (Exception e) {
            System.out.println("Tính thời gian đến hoặc thêm TauChayTuyen bị lỗi");
        }
        int ketQuaThemTauChayTuyen=kiemTraThemTau(ketNoiCSDL,maTau,maTuyen,tsThoiGianKhoiHanh,tsThoiGianDen,tsThoiGianHieuChinhTau.toString(),tsThoiGianHieuChinhTuyen.toString());
        if (ketQuaThemTauChayTuyen==1) {
            // them vao bang
        tbmTau.addRow(new Object[]{maTau,tsThoiGianHieuChinhTau, maTuyen,tsThoiGianHieuChinhTuyen, tsThoiGianKhoiHanh,tsThoiGianDen});
        int hangCuoi = jtbTau.getRowCount();
        jtbTau.scrollRectToVisible(jtbTau.getCellRect(hangCuoi - 1, 0, true));
        jtbTau.clearSelection();
        jtbTau.setRowSelectionInterval(hangCuoi - 1, hangCuoi - 1);
        return true;
        }
        else if (ketQuaThemTauChayTuyen==-1) {
            JOptionPane.showMessageDialog(this, "Thời gian này tàu còn đang chạy");
            ketNoiCSDL.update("delete from TauChayTuyen where MaTau=? and MaTuyen=? and ThoiGianKhoiHanh=? and ThoiGianDen=? and ThoiGianHieuChinhTau=? and ThoiGianHieuChinh=?",maTau,maTuyen,tsThoiGianKhoiHanh,tsThoiGianDen, tsThoiGianHieuChinhTau,tsThoiGianHieuChinhTuyen);
            return false;
        }
        
        return false;
    }

    private boolean suaTau() {
        SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd HH:mm");
        String maTauCu=jtbTau.getValueAt(hangDangChon, 0).toString();
        String strThoiGianHieuChinhTau=jtbTau.getValueAt(hangDangChon, 1).toString();
        String maTuyenCu=jtbTau.getValueAt(hangDangChon, 2).toString();
        String strThoiGianHieuChinhTuyen=jtbTau.getValueAt(hangDangChon, 3).toString();
        String strThoiGianKhoiHanh=jtbTau.getValueAt(hangDangChon, 4).toString();
        String strThoiGianDen=jtbTau.getValueAt(hangDangChon, 5).toString();
//        java.sql.Timestamp thoiGianHieuChinhTauCu=null;
//        java.sql.Timestamp thoiGianHieuChinhTuyenCu=null;
//        java.sql.Timestamp thoiGianKhoiHanhCu=null;
//        java.sql.Timestamp thoiGianDenCu=null;
//        try {
//            thoiGianHieuChinhTauCu=new java.sql.Timestamp(formatter.parse(strThoiGianHieuChinhTau).getTime());
//            thoiGianHieuChinhTuyenCu=new java.sql.Timestamp(formatter.parse(strThoiGianHieuChinhTuyen).getTime());
//            thoiGianKhoiHanhCu=new java.sql.Timestamp(formatter.parse(strThoiGianKhoiHanh).getTime());
//            thoiGianDenCu=new java.sql.Timestamp(formatter.parse(strThoiGianDen).getTime());
//        } catch (Exception e) {
//            System.out.println("Lỗi parse sang Date ThoiGianKhoiHanhCu, ThoiGianDenCu");
//            e.printStackTrace();
//        }
        java.sql.Timestamp thoiGianKhoiHanhMoi=null;
        java.sql.Timestamp tsThoiGianDenMoi=null;
        try {
            String strThoiGianKhoiHanhMoi=datePickerThoiGianKhoiHanh.toString()+" "+timePickerThoiGianKhoiHanh.toString();            
            thoiGianKhoiHanhMoi=new java.sql.Timestamp(formatter.parse(strThoiGianKhoiHanhMoi).getTime());
            if (thoiGianKhoiHanhMoi.compareTo(new java.sql.Timestamp(System.currentTimeMillis()))>0)
            {
                ResultSet rs=ketNoiCSDL.select("select [dbo].[tinhThoiGianDenCuaTau](?,?,?)",maTuyenCu,strThoiGianHieuChinhTuyen,thoiGianKhoiHanhMoi);
                if (rs.next())
                {
                    tsThoiGianDenMoi=rs.getTimestamp(1);
                }
                ketNoiCSDL.update("delete from TauChayTuyen where MaTau=? and MaTuyen=? and ThoiGianKhoiHanh=? and ThoiGianHieuChinhTau=? and ThoiGianHieuChinh=?",maTauCu,maTuyenCu,strThoiGianKhoiHanh,strThoiGianHieuChinhTau,strThoiGianHieuChinhTuyen);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Thời gian khởi hành phải lớn hơn hiện tại");
                return false;
            }   
        } catch (Exception e) {
            System.out.println("Tính thời gian đến hoặc thêm TauChayTuyen bị lỗi");
        }
        int ketQuaThemTauChayTuyen=kiemTraThemTau(ketNoiCSDL,maTauCu,maTuyenCu,thoiGianKhoiHanhMoi,tsThoiGianDenMoi,strThoiGianHieuChinhTau,strThoiGianHieuChinhTuyen);
        if (ketQuaThemTauChayTuyen==1) {
            // update thành công 
            tbmTau.setValueAt(maTauCu, hangDangChon,0 );
            tbmTau.setValueAt(maTuyenCu,hangDangChon,2);
            tbmTau.setValueAt(thoiGianKhoiHanhMoi,hangDangChon,4);
            tbmTau.setValueAt(tsThoiGianDenMoi,hangDangChon,5);
            return true;
            }
        else if (ketQuaThemTauChayTuyen==-1){
            JOptionPane.showMessageDialog(this, "Thời gian này tàu còn đang chạy");
            //update không thành công xoá thằng mới
            ketNoiCSDL.update("delete from TauChayTuyen where MaTau=? and MaTuyen=? and ThoiGianKhoiHanh=? and ThoiGianHieuChinhTau=? and ThoiGianHieuChinh=?",maTauCu,maTuyenCu,thoiGianKhoiHanhMoi,strThoiGianHieuChinhTau,strThoiGianHieuChinhTuyen);
            //insert lại thằng cũ
            ketNoiCSDL.update("insert into TauChayTuyen(MaTau,MaTuyen,ThoiGianKhoiHanh,ThoiGianDen, ThoiGianHieuChinhTau, ThoiGianHieuChinh) values(?,?,?,?,?,?)", maTauCu,maTuyenCu,strThoiGianKhoiHanh,strThoiGianDen,strThoiGianHieuChinhTau,strThoiGianHieuChinhTuyen);
            return false;
        }    
        else
        {
            //insert lại thằng cũ
            ketNoiCSDL.update("insert into TauChayTuyen(MaTau,MaTuyen,ThoiGianKhoiHanh,ThoiGianDen, ThoiGianHieuChinhTau, ThoiGianHieuChinh) values(?,?,?,?,?,?)", maTauCu,maTuyenCu,strThoiGianKhoiHanh,strThoiGianDen,strThoiGianHieuChinhTau,strThoiGianHieuChinhTuyen);
        }
        return false;
    }
    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        String loai = jlbTenDialog.getText();
        if (loai.equals(them)) {
            if (themTau(ketNoiCSDL)) {
                JOptionPane.showMessageDialog(jdlTauChayTuyen, "Thêm thành công");
                datePickerThoiGianKhoiHanh.setDate(datePickerThoiGianKhoiHanh.getDate().plusDays(Long.valueOf(jSpinnerStep.getValue().toString())));
            } else {
                JOptionPane.showMessageDialog(jdlTauChayTuyen, "Thêm thất bại");
            }
            //hangDangChon = jtbTau.getRowCount() - 1;
        } else if (loai.equals(sua)) {
            if (suaTau()) {
                JOptionPane.showMessageDialog(jdlTauChayTuyen, "Sửa thành công");
                jdlTauChayTuyen.dispose();
            } else {
                JOptionPane.showMessageDialog(jdlTauChayTuyen, "Sửa thất bại");
            }
        }
    }//GEN-LAST:event_btnXacNhanActionPerformed
    private void loadThongTinSua() {
        String maTau=jtbTau.getValueAt(hangDangChon, 0).toString();
        String maTuyen=jtbTau.getValueAt(hangDangChon, 2).toString();
        loadDSTauVaoCBB();
        loadDSTuyenVaoCBB();
        cbbMaTau.setSelectedItem(maTau);
        cbbTuyen.setSelectedItem(maTuyen);
        String[] strThoiGianKhoiHanh=jtbTau.getValueAt(hangDangChon, 4).toString().split("\\s");
        datePickerThoiGianKhoiHanh.setText(strThoiGianKhoiHanh[0]);
        timePickerThoiGianKhoiHanh.setText(strThoiGianKhoiHanh[1].substring(0, strThoiGianKhoiHanh[1].length()-2));
    }
    private void hienThiDialog(String loai) {
        setThongBaoRong();
        hienTruong();
        if (loai.equals(them)) {
            cbbMaTau.setEnabled(true);
            cbbTuyen.setEnabled(true);
            datePickerThoiGianKhoiHanh.setText(new SimpleDateFormat("dd-MM-yyyy").format(new Date()));
            setTruongRong();
            setThongBaoRong();
            loadDSTauVaoCBB();
            loadDSTuyenVaoCBB();
        } else if (loai.equals(sua)) {
            cbbMaTau.setEnabled(false);
            cbbTuyen.setEnabled(false);
            loadThongTinSua();
        }

        jlbTenDialog.setText(loai);
        jdlTauChayTuyen.setLocationRelativeTo(this);
        jdlTauChayTuyen.setVisible(true);
    }
    private void loadDSTauVaoCBB()
    {
        cbbMaTau.removeAllItems();
        try {
            ResultSet rs = ketNoiCSDL.select("select MaTau,MAX(ThoiGianHieuChinhTau) as ThoiGianHieuChinhMax from Tau\n" +
            "group by MaTau");
            while (rs.next())
            {
                cbbMaTau.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            System.out.println("Load mã tàu vào cbb bị lỗi");
        }
    }
    private void loadDSTuyenVaoCBB()
    {
        cbbTuyen.removeAllItems();
        ComboboxToolTipRenderer renderer = new ComboboxToolTipRenderer();
        List<String> tooltips=new ArrayList<String>();
        cbbTuyen.setRenderer(renderer);
        try {
            ResultSet rs = ketNoiCSDL.select("select MaTuyen,TenTuyen,MAX(ThoiGianHieuChinh) as ThoiGianHieuChinhMax from Tuyen\n"
                    + "group by MaTuyen,TenTuyen;");
            while (rs.next())
            {
                cbbTuyen.addItem(rs.getString(1));
                tooltips.add(rs.getString(2));
            }
            renderer.setTooltips(tooltips);
        } catch (Exception e) {
            System.out.println("Load mã Tuyến vào cbb bị lỗi");
        }
    }
    private void setThongBaoRong() {
        jlbMaTau.setText(" ");
        jlbThoiGianKhoiHanh.setText(" ");
    }

    private void hienTruong() {
        datePickerThoiGianKhoiHanh.setEnabled(true);
        timePickerThoiGianKhoiHanh.setEnabled(true);
        jSpinnerStep.setEnabled(true);
    }

    private void tatTruong() {
        cbbMaTau.setEditable(false);
        datePickerThoiGianKhoiHanh.setEnabled(false);
        timePickerThoiGianKhoiHanh.setEnabled(false);
        jSpinnerStep.setEnabled(false);
    }

    private void setTruongRong() {
        cbbMaTau.removeAllItems();
        //dateTimePickerThoiGianKhoiHanh.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua1;
    private javax.swing.JButton btnThem1;
    private javax.swing.JButton btnTroVe1;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JComboBox<String> cbbMaTau;
    private javax.swing.JComboBox<String> cbbTuyen;
    private com.github.lgooddatepicker.components.DatePicker datePickerThoiGianKhoiHanh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JSeparator jSeparator25;
    private javax.swing.JSeparator jSeparator26;
    private javax.swing.JSpinner jSpinnerStep;
    private javax.swing.JDialog jdlTauChayTuyen;
    private javax.swing.JLabel jlbMaTau;
    private javax.swing.JLabel jlbTenDialog;
    private javax.swing.JLabel jlbThoiGianKhoiHanh;
    private javax.swing.JTable jtbTau;
    private javax.swing.JTextField jtfTimKiem1;
    private com.github.lgooddatepicker.components.TimePicker timePickerThoiGianKhoiHanh;
    // End of variables declaration//GEN-END:variables
}
