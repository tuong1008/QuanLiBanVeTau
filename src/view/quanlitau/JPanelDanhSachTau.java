/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.quanlitau;

import connectSQL.LopKetNoi;
import controller.ChuyenManHinhView;
import controller.ListTransferHandler;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.security.interfaces.DSAKeyPairGenerator;
import java.util.ArrayList;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;
import module.CheckInPut;
import module.Tau;
import view.JPanelQuanLiToaTau;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class JPanelDanhSachTau extends javax.swing.JPanel {

    // loai button
    private String them = "THÊM TÀU";
    private String sua = "SỬA TÀU";
    private String thongTin = "THÔNG TIN TÀU";
    
    private LopKetNoi ketNoiCSDL;
    private DefaultTableModel tbmTau;
    private int hangDangChon = -1;
    private DefaultListModel<String> lmToaThuocTau;
    private DefaultListModel<String> jListDSToaModel;
    ListTransferHandler lh;
    int chucNangSua;//-1|0|1   k sửa|update|insert
    

    /**
     * Creates new form JPanelDanhSachTau
     */
    public JPanelDanhSachTau() {
        initComponents();
        tbmTau = (DefaultTableModel) jtbTau.getModel();
        lh=new ListTransferHandler();
        jListDSToa.setTransferHandler(lh);
        jlToaThuocTau.setTransferHandler(lh);
        lmToaThuocTau = new DefaultListModel<String>();
        jListDSToaModel=new DefaultListModel<String>();
        jListDSToa.setModel(jListDSToaModel);
        jlToaThuocTau.setModel(lmToaThuocTau);
        ketNoiCSDL=new LopKetNoi();

        loadBangTau(ketNoiCSDL.select("select MaTau,ThoiGianHieuChinhTau from tau\n" +
        "group by MaTau,ThoiGianHieuChinhTau"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdlThongTinTau = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jlbTenDialog = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfMaTau = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlToaThuocTau = new javax.swing.JList<>();
        btnXacNhan = new javax.swing.JButton();
        jlbMaTau = new javax.swing.JLabel();
        jlbToaThuocTau = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDSToa = new javax.swing.JList<>();
        jPanel13 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jtbTau = new javax.swing.JTable();
        jLabel50 = new javax.swing.JLabel();
        btnThem1 = new javax.swing.JButton();
        btnSua1 = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jtfTimKiem1 = new javax.swing.JTextField();
        cbbTimKiem1 = new javax.swing.JComboBox<>();
        cbbSapXep1 = new javax.swing.JComboBox<>();
        jLabel52 = new javax.swing.JLabel();
        btnTroVe1 = new javax.swing.JButton();
        btnThongTin1 = new javax.swing.JButton();
        jSeparator25 = new javax.swing.JSeparator();
        jSeparator26 = new javax.swing.JSeparator();

        jdlThongTinTau.setMinimumSize(new java.awt.Dimension(574, 467));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(574, 467));

        jlbTenDialog.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlbTenDialog.setText("THÊM TÀU");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Mã tàu:");

        jtfMaTau.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfMaTau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMaTauActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Chọn toa:");

        jlToaThuocTau.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlToaThuocTau.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlToaThuocTau.setDragEnabled(true);
        jlToaThuocTau.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane2.setViewportView(jlToaThuocTau);

        btnXacNhan.setBackground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnXacNhan.setText("XÁC NHẬN");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        jlbMaTau.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jlbMaTau.setForeground(new java.awt.Color(255, 51, 0));
        jlbMaTau.setText(" a");

        jlbToaThuocTau.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jlbToaThuocTau.setForeground(new java.awt.Color(255, 51, 0));
        jlbToaThuocTau.setText("a");

        jListDSToa.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListDSToa.setDragEnabled(true);
        jListDSToa.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane1.setViewportView(jListDSToa);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(113, 113, 113)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlbToaThuocTau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlbMaTau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfMaTau)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jlbTenDialog)))
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbTenDialog)
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfMaTau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbMaTau)
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbToaThuocTau)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jdlThongTinTauLayout = new javax.swing.GroupLayout(jdlThongTinTau.getContentPane());
        jdlThongTinTau.getContentPane().setLayout(jdlThongTinTauLayout);
        jdlThongTinTauLayout.setHorizontalGroup(
            jdlThongTinTauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jdlThongTinTauLayout.setVerticalGroup(
            jdlThongTinTauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel49.setBackground(new java.awt.Color(255, 255, 255));
        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setText("DANH SÁCH TÀU");

        jtbTau.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtbTau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ TÀU", "THỜI GIAN HIỆU CHỈNH TÀU"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbTau.setGridColor(new java.awt.Color(255, 255, 255));
        jtbTau.setRowHeight(25);
        jtbTau.setSelectionBackground(new java.awt.Color(51, 204, 255));
        jtbTau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbTauMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtbTauMousePressed(evt);
            }
        });
        jScrollPane13.setViewportView(jtbTau);

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel50.setText("Chức năng");

        btnThem1.setBackground(new java.awt.Color(255, 255, 255));
        btnThem1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem1.setText("THÊM");
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        btnSua1.setBackground(new java.awt.Color(255, 255, 255));
        btnSua1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua1.setText("SỬA");
        btnSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua1ActionPerformed(evt);
            }
        });

        btnXoa1.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa1.setText("XÓA");
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel51.setText("Tìm kiếm:");

        jtfTimKiem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimKiem1KeyReleased(evt);
            }
        });

        cbbTimKiem1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbbTimKiem1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã tàu" }));

        cbbSapXep1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbbSapXep1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thời gian hiệu chỉnh tàu tăng dần", "Thời gian hiệu chỉnh tàu giảm dần" }));
        cbbSapXep1.setSelectedItem(null);
        cbbSapXep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSapXep1ActionPerformed(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel52.setText("Sắp xếp:");

        btnTroVe1.setBackground(new java.awt.Color(255, 255, 255));
        btnTroVe1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outline_arrow_back_black_24dp_1.png"))); // NOI18N
        btnTroVe1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTroVe1ActionPerformed(evt);
            }
        });

        btnThongTin1.setBackground(new java.awt.Color(255, 255, 255));
        btnThongTin1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThongTin1.setText("THÔNG TIN");
        btnThongTin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap(21, Short.MAX_VALUE)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 958, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel13Layout.createSequentialGroup()
                                                .addComponent(jSeparator26, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel51)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtfTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbbTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                                                .addComponent(jLabel52)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cbbSapXep1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jSeparator25))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(jLabel50)
                                        .addGap(59, 59, 59)
                                        .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(102, 102, 102)
                                        .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(128, 128, 128)))
                                .addComponent(btnThongTin1))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(btnTroVe1)
                                .addGap(326, 326, 326)
                                .addComponent(jLabel49)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(22, 22, 22))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnTroVe1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel49)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThongTin1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator26, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbbSapXep1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel52)
                        .addComponent(jtfTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel51)
                        .addComponent(cbbTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtbTauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTauMouseClicked
        // TODO add your handling code here:
        hangDangChon = jtbTau.getSelectedRow();
    }//GEN-LAST:event_jtbTauMouseClicked

    private void jtbTauMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTauMousePressed
        // TODO add your handling code here:
        hangDangChon = jtbTau.getSelectedRow();
        if (hangDangChon != -1) {
            if (evt.getButton() == MouseEvent.BUTTON3) {
                hienThiDialog(thongTin);
            }
        }
    }//GEN-LAST:event_jtbTauMousePressed

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        // TODO add your handling code here:
        hienThiDialog(them);
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void btnSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua1ActionPerformed
        // TODO add your handling code here:
        hangDangChon=jtbTau.getSelectedRow();
        if (hangDangChon < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đối tượng! Vui lòng chọn 1 dòng trong bảng");
        } else {
            String maTau = jtbTau.getValueAt(hangDangChon, 0).toString();
            String strThoiGianHieuChinhTau=jtbTau.getValueAt(hangDangChon, 1).toString();
            java.sql.Timestamp tsThoiGianHieuChinhTauMax=null;
            try {
                ResultSet rs=ketNoiCSDL.select("select MAX(ThoiGianHieuChinhTau) from Tau where MaTau=?",maTau);
                if (rs.next())
                {
                    tsThoiGianHieuChinhTauMax=rs.getTimestamp(1);
                }
                rs=ketNoiCSDL.select("select MaChuyen from ChuyenDi where ID_TCT in (select ID_TCT from TauChayTuyen\n" +
                "where MaTau=? and ThoiGianHieuChinhTau=?)",maTau,strThoiGianHieuChinhTau);
                if (rs.next())
                {
                    if (strThoiGianHieuChinhTau.equals(tsThoiGianHieuChinhTauMax.toString()))
                    {
                        //bằng max thì insert
                        chucNangSua=1;
                        hienThiDialog(sua);
                    }
                    else
                    {
                        //không sửa vì đã đặt vé
                        chucNangSua=-1;
                        JOptionPane.showMessageDialog(this, "Không sửa được vì đã đặt vé!");
                    }
                }
                else
                {
                    //được update vì chưa thêm vào vé
                    chucNangSua=0;
                    hienThiDialog(sua);
                }
            } catch (Exception e) {
                System.out.println("Không tìm được Thời gian thời gian hiệu chỉnh MAX hoặc Lỗi kiểm tra tàu đã được đặt vé chưa");
            }
        }
    }//GEN-LAST:event_btnSua1ActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        // TODO add your handling code here:
        if (hangDangChon < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đối tượng! Vui lòng chọn 1 hàng trong bảng");

        } else {
            int input = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa không?", "Cảnh báo", JOptionPane.YES_NO_OPTION);
            if (input == JOptionPane.YES_OPTION) {
                String maTau = jtbTau.getValueAt(hangDangChon, 0).toString();
                String thoiGianHieuChinhTau=jtbTau.getValueAt(hangDangChon, 1).toString();
                try {
                    if (ketNoiCSDL.update("delete from ToaThuocTau\n" +
                    "where MaTau=? and ThoiGianHieuChinhTau=?", maTau,thoiGianHieuChinhTau)
                      &&ketNoiCSDL.update("delete from Tau\n" +
                    "where MaTau=? and ThoiGianHieuChinhTau=?",maTau,thoiGianHieuChinhTau)) {//nếu xoá tàu k được vì đã phân tuyến cho tàu
                        tbmTau.removeRow(hangDangChon);
                        hangDangChon = -1;
                        jtbTau.clearSelection();
                    } else {
                        JOptionPane.showMessageDialog(this, "Không thể xóa vì có tàu đang chạy");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void jtfTimKiem1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKiem1KeyReleased
        // TODO add your handling code here:

        if (cbbTimKiem1.getSelectedIndex() == 0) {// tim kiem theo ma tau
            String maTau = jtfTimKiem1.getText();
            loadBangTau(ketNoiCSDL.select("select * from tau where maTau like ?",
                    "%" + maTau + "%"));
        } 
        hangDangChon = -1;
        jtbTau.clearSelection();
    }//GEN-LAST:event_jtfTimKiem1KeyReleased

    private void cbbSapXep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSapXep1ActionPerformed
        // TODO add your handling code here:
        String loaiSapXep=cbbSapXep1.getSelectedItem().toString();
        ArrayList <Tau> DSTauChuaSapXep=new ArrayList<Tau>();
        for (int i=0;i<jtbTau.getRowCount();i++)
        {
            Tau tau=new Tau();
            tau.setMaTau(jtbTau.getValueAt(i, 0).toString());
            tau.setThoiGianHieuChinhTau(jtbTau.getValueAt(i, 1).toString());
            DSTauChuaSapXep.add(tau);
        }
        if (cbbSapXep1.getSelectedIndex()==0)
        {
            Collections.sort(DSTauChuaSapXep, new Comparator<Tau>() {
            @Override
            public int compare(Tau lhs, Tau rhs) {
                // -1 - less than, 1 - greater than, 0 - equal, all inversed for descending
                return lhs.getThoiGianHieuChinhTau().compareTo(rhs.getThoiGianHieuChinhTau());
            }
        });
        }
        else if (cbbSapXep1.getSelectedIndex()==1)
        {
            Collections.sort(DSTauChuaSapXep, new Comparator<Tau>() {
            @Override
            public int compare(Tau lhs, Tau rhs) {
                // -1 - less than, 1 - greater than, 0 - equal, all inversed for descending
                return -1 * lhs.getThoiGianHieuChinhTau().compareTo(rhs.getThoiGianHieuChinhTau());
            }
        });
        }
        tbmTau.setRowCount(0);
        for (Tau i : DSTauChuaSapXep) {
            tbmTau.addRow(new Object[]{i.getMaTau(),i.getThoiGianHieuChinhTau()});
        }
    }//GEN-LAST:event_cbbSapXep1ActionPerformed

    private void btnTroVe1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTroVe1ActionPerformed
        // TODO add your handling code here:
        new ChuyenManHinhView(this, new JPanelQuanLiToaTau()).change();
    }//GEN-LAST:event_btnTroVe1ActionPerformed

    private void btnThongTin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin1ActionPerformed
        // TODO add your handling code here:
        if (hangDangChon == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 hàng trong bảng");
        } else
            hienThiDialog(thongTin);
    }//GEN-LAST:event_btnThongTin1ActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        String loai = jlbTenDialog.getText();
        
        if (loai.equals(thongTin)) {
            jdlThongTinTau.dispose();
        } else if (loai.equals(them)) {
            if (themTau(ketNoiCSDL)) {
                JOptionPane.showMessageDialog(jdlThongTinTau, "Thêm thành công");
                setTruongRong();
                setThongBaoRong();
                jdlThongTinTau.dispose();
            } else {
                JOptionPane.showMessageDialog(jdlThongTinTau, "Thêm thất bại");
            }
            hangDangChon = jtbTau.getRowCount() - 1;
        } else if (loai.equals(sua)) {
            if (suaTau()) {
                JOptionPane.showMessageDialog(jdlThongTinTau, "Sửa thành công");
            } else {
                JOptionPane.showMessageDialog(jdlThongTinTau, "Sửa thất bại");
            }
            jdlThongTinTau.dispose();
        }

    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void jtfMaTauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMaTauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfMaTauActionPerformed
//===============================================================================================

    private void loadBangTau(ResultSet rs) {
        tbmTau.setRowCount(0);
        try {
            while (rs.next()) {
                String maTau = rs.getString(1);
                java.sql.Timestamp thoiGianHieuChinhTau=rs.getTimestamp(2);
                tbmTau.addRow(new Object[]{maTau,thoiGianHieuChinhTau});
            }
        } catch (Exception e) {
            System.out.println("Load bảng tàu thất bại!");
            e.printStackTrace();
        }
    }

    //==================================================================
    private void setThongBaoRong() {
        jlbMaTau.setText(" ");
        jlbToaThuocTau.setText(" ");
    }

    private void hienTruong() {
        jtfMaTau.setEditable(true);
        jlToaThuocTau.setEnabled(true);
        jListDSToa.setEnabled(true);
    }

    private void tatTruong() {
        jtfMaTau.setEditable(false);
        jlToaThuocTau.setEnabled(false);
        jListDSToa.setEnabled(false);
    }

    private void setTruongRong() {
        jtfMaTau.setText("");
        lmToaThuocTau.clear();
    }

    public void setSelectedValues(JList list, ArrayList ds) {
        list.clearSelection();
        for (Object value : ds) {
            int index = getIndex((DefaultListModel) list.getModel(), value);
            if (index >= 0) {
                list.addSelectionInterval(index, index);
            }
        }
        list.ensureIndexIsVisible(list.getSelectedIndex());
    }

    public int getIndex(DefaultListModel model, Object value) {
        if (value == null) {
            return -1;
        }
        return model.indexOf(value);
    }

    
    private DefaultListModel<String> getDSToa() {
        DefaultListModel<String> dsToa = new DefaultListModel<String>();
        try {
            ResultSet rs = LopKetNoi.select("select maToa from Toa");
            while (rs.next()) {
                dsToa.addElement(rs.getString(1));
            }
        } catch (Exception e) {
            System.out.println("get ds toa that bai");
        }
        return dsToa;
    }

    private void loadThongTinSua() {
        String maTau = jtbTau.getValueAt(hangDangChon, 0).toString();
        String strThoiGianHieuChinhTau=jtbTau.getValueAt(hangDangChon, 1).toString();
        jtfMaTau.setText(maTau);
        lmToaThuocTau = loadDSToaCuaTauVaoList(ketNoiCSDL, maTau,strThoiGianHieuChinhTau);
        jlToaThuocTau.setModel(lmToaThuocTau);
        jListDSToaModel=loadDSToaChuaCoTauVaoList(ketNoiCSDL);
        jListDSToa.setModel(jListDSToaModel);
    }

    private DefaultListModel loadDSToaChuaCoTauVaoList(LopKetNoi ketNoiCSDL) {
        DefaultListModel<String> model = new DefaultListModel<>();
        try {
            ResultSet rs = ketNoiCSDL.select("select table1.MaToa \n" +
            "from Toa as table1 \n" +
            "where table1.MaToa\n" +
            "not in(\n" +
            "select table2.MaToa \n" +
            "from (select MaTau,MaToa,ThoiGianHieuChinhTau as ThoiGianHieuChinhTau from ToaThuocTau as table3\n" +
            "where ThoiGianHieuChinhTau = \n" +
            "(select MAX(ThoiGianHieuChinhTau) as TGHCT1 from ToaThuocTau where MaTau=table3.MaTau)) as table2)");
            while (rs.next()) {
                model.addElement(rs.getString(1));
            }
        } catch (Exception e) {
            System.out.println("load ds toa chua co tau vao list that bai");
            e.printStackTrace();
        }
        return model;
    }
    private DefaultListModel loadDSToaCuaTauVaoList(LopKetNoi ketNoiCSDL, String maTau,String strThoiGianHieuChinhTau) {
        DefaultListModel<String> model = new DefaultListModel<>();
        try {
            ResultSet rs = ketNoiCSDL.select("select MaTau,MaToa from ToaThuocTau\n" +
        "where MaTau=? and ThoiGianHieuChinhTau=?",maTau,strThoiGianHieuChinhTau);
            while (rs.next()) {
                model.addElement(rs.getString(2));
            }
        } catch (Exception e) {
            System.out.println("load ds toa cua Tau vao list that bai");
            e.printStackTrace();
        }
        return model;
    }
    private void hienThiDialog(String loai) {
        setThongBaoRong();
        hienTruong();
        if (loai.equals(them)) {
            jtfMaTau.setEditable(true);
            setTruongRong();
            jListDSToaModel=loadDSToaChuaCoTauVaoList(ketNoiCSDL);
            jListDSToa.setModel(jListDSToaModel);
            jListDSToa.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                JList l = (JList)e.getSource();
                ListModel m = l.getModel();
                int index = l.locationToIndex(e.getPoint());
                if( index>-1 ) {
                    l.setToolTipText(timLoaiToaTheoMa(m.getElementAt(index).toString(),ketNoiCSDL));
                }
            }
            });
        } else if (loai.equals(sua)) {
            hienTruong();
            jtfMaTau.setEditable(false);
            loadThongTinSua();
        } else if (loai.equals(thongTin)) {
            jListDSToaModel.clear();
            tatTruong();
            setThongBaoRong();
            String maTau=jtbTau.getValueAt(hangDangChon, 0).toString();
            String strThoiGianHieuChinhTau=jtbTau.getValueAt(hangDangChon, 1).toString();
            jtfMaTau.setText(maTau);
            lmToaThuocTau = loadDSToaCuaTauVaoList(ketNoiCSDL, maTau,strThoiGianHieuChinhTau);
            jlToaThuocTau.setModel(lmToaThuocTau);
            
        }

        jlbTenDialog.setText(loai);
        jdlThongTinTau.setLocationRelativeTo(this);
        jdlThongTinTau.setVisible(true);
    }

    private boolean kiemTraThemTau(LopKetNoi ketNoiCSDL) {
        // kiem tra ma trung va so luong toa
        
        if (!CheckInPut.checkCacLoaiMa(jlbMaTau.getText().trim())) {
            jlbMaTau.setText("Chỉ nhập chữ cái, -, khoảng trắng và không được để trống");
        } else {
            try {
                ResultSet rs = ketNoiCSDL.select("select maTau from Tau where maTau = ?", jtfMaTau.getText().trim());
                if (rs.next()) {
                    jlbMaTau.setText("Mã tàu đã tồn tại");
                } else {
                    jlbMaTau.setText(" ");
                    if (lmToaThuocTau.size() == 0) {
                        jlbToaThuocTau.setText("Tàu phải có ít nhất 1 Toa!");
                    } else {
                        jlbToaThuocTau.setText(" ");
                    }
                }
            } catch (Exception e) {
                System.out.println("Kiểm tra mã tàu lỗi");
            }
        }

    
    
        if (jlbMaTau.getText().equals(" ") && jlbToaThuocTau.getText().equals(" ")) {
            return true;
        } else {
            return false;
        }
    
    }
    private boolean kiemTraSuaTau(LopKetNoi ketNoiCSDL) {
        if (lmToaThuocTau.size()==0)
            {
                jlbToaThuocTau.setText("Tàu phải có ít nhất 1 Toa!");
                return false;
            }
            else
            {
                jlbToaThuocTau.setText(" ");
            }
        return true;
    }
    
    private String timLoaiToaTheoMa(String maToa,LopKetNoi ketNoiCSDL)
    {
        try {
            ResultSet rs=ketNoiCSDL.select("select * from Toa join LoaiToa on Toa.MaLoaiToa=LoaiToa.MaLoaiToa and Toa.MaToa=?", maToa);
            if (rs.next()) {
                    return rs.getString("TenLoaiToa");
                } 
        } catch (Exception e) {
        }
        return "";
    }
    private boolean themTau(LopKetNoi ketNoiCSDL) {
        if (kiemTraThemTau(ketNoiCSDL)) {
        String maTau = jtfMaTau.getText().trim().toUpperCase();
        java.sql.Timestamp tsThoiGianHieuChinhTau=new java.sql.Timestamp(System.currentTimeMillis());            
        ketNoiCSDL.update("insert into tau(MaTau,ThoiGianHieuChinhTau) values(?,?)", maTau, tsThoiGianHieuChinhTau);
        for (int i=0;i<lmToaThuocTau.getSize();i++) {
            ketNoiCSDL.update("insert into ToaThuocTau values(?,?,?)", maTau,tsThoiGianHieuChinhTau, lmToaThuocTau.get(i));
        }
        // them vao bang
        tbmTau.addRow(new Object[]{maTau, tsThoiGianHieuChinhTau});
        int hangCuoi = jtbTau.getRowCount();
        jtbTau.scrollRectToVisible(jtbTau.getCellRect(hangCuoi - 1, 0, true));
        jtbTau.clearSelection();
        jtbTau.setRowSelectionInterval(hangCuoi - 1, hangCuoi - 1);
        return true;

        } else {
            return false;
    }
    }
    private boolean suaTau() {
        if (kiemTraSuaTau(ketNoiCSDL)) {
            String maTau = jtfMaTau.getText();
            String strThoiGianHieuChinhTau=jtbTau.getValueAt(hangDangChon, 1).toString();
            if (chucNangSua==1)
                {
                    //bằng 1 thì insert
                    java.sql.Timestamp thoiGianHieuChinhTauMoi=new java.sql.Timestamp(System.currentTimeMillis());
                    ketNoiCSDL.update("insert into Tau(MaTau,ThoiGianHieuChinhTau) values(?,?)",maTau,thoiGianHieuChinhTauMoi);
                    loadBangTau(ketNoiCSDL.select("select MaTau,ThoiGianHieuChinhTau from tau\n" +
                    "group by MaTau,ThoiGianHieuChinhTau"));
                    hangDangChon++;
                    jtbTau.setRowSelectionInterval(hangDangChon, hangDangChon);
                    for (int i=0;i<lmToaThuocTau.size();i++)
                    {
                        ketNoiCSDL.update("insert into ToaThuocTau values(?,?,?)",maTau,thoiGianHieuChinhTauMoi,lmToaThuocTau.getElementAt(i));
                    }
                }
            else
            {
                if (chucNangSua==0)
                {
                    //được update vì chưa thêm vào vé
                    ketNoiCSDL.update("delete from ToaThuocTau where MaTau=? and ThoiGianHieuChinhTau=?",maTau,strThoiGianHieuChinhTau);
                    for (int i=0;i<lmToaThuocTau.size();i++)
                    {
                        ketNoiCSDL.update("insert into ToaThuocTau values(?,?,?)",maTau,strThoiGianHieuChinhTau,lmToaThuocTau.getElementAt(i));
                    }
                }
            }
            return true;
                    
//        SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
//        String maTauCu=jtbTau.getValueAt(hangDangChon, 0).toString();
//        java.sql.Timestamp thoiGianThemToaCu=null;
//        try {
//            ResultSet rs=ketNoiCSDL.select("select MAX(ThoiGian) from ToaThuocTau where MaTau=?",maTauCu);
//            if (rs.next())
//            {
//                thoiGianThemToaCu=rs.getTimestamp(1);
//            }
//        } catch (Exception e) {
//            System.out.println("Lỗi parse sang Date ThoiGianKhoiHanhCu, ThoiGianDenCu");
//            e.printStackTrace();
//        }
//        //ketNoiCSDL.update("delete from TauChayTuyen where MaTau=? and MaTuyen=? and ThoiGianKhoiHanh=?",maTauCu,maTuyenCu,thoiGianKhoiHanhCu);
//        String maTauMoi=null;
//        String maTuyenMoi=null;
//        java.sql.Timestamp thoiGianKhoiHanhMoi=null;
//        java.sql.Timestamp tsThoiGianDenMoi=null;
//        try {
//           // String strThoiGianKhoiHanhMoi=jtfThoiGianKhoiHanh.getText();
//            //maTauMoi = cbbMaTau.getSelectedItem().toString();
//            //maTuyenMoi=cbbTuyen.getSelectedItem().toString();
//            //thoiGianKhoiHanhMoi=new java.sql.Timestamp(formatter.parse(strThoiGianKhoiHanhMoi).getTime());
//            ResultSet rs=ketNoiCSDL.select("select [dbo].[tinhThoiGianDenCuaTau](?,?)",maTuyenMoi,thoiGianKhoiHanhMoi);
//            if (rs.next())
//            {
//                tsThoiGianDenMoi=rs.getTimestamp(1);
//            }
//        } catch (Exception e) {
//            System.out.println("Tính thời gian đến hoặc thêm TauChayTuyen bị lỗi");
//        }
//        //if (kiemTraThemTau(ketNoiCSDL,maTauMoi,maTuyenMoi,thoiGianKhoiHanhMoi,tsThoiGianDenMoi)) {
//            // update thành công 
//            tbmTau.setValueAt(maTauMoi, hangDangChon,0 );
//            tbmTau.setValueAt(maTuyenMoi,hangDangChon,1);
//            tbmTau.setValueAt(thoiGianKhoiHanhMoi,hangDangChon,2);
//            tbmTau.setValueAt(tsThoiGianDenMoi,hangDangChon,3);
//            return true;
//        //    }
//        //else {
//            //update không thành công xoá thằng mới
//         //   ketNoiCSDL.update("delete from TauChayTuyen where MaTau=? and MaTuyen=? and ThoiGianKhoiHanh=?",maTauMoi,maTuyenMoi,thoiGianKhoiHanhMoi);
//            //insert lại thằng cũ
//         //   ketNoiCSDL.update("insert into TauChayTuyen(MaTau,MaTuyen,ThoiGianKhoiHanh,ThoiGianDen) values(?,?,?,?)", maTauCu,maTuyenCu,thoiGianKhoiHanhCu,thoiGianDenCu);
//          //  return false;
//        //} 
    
    }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua1;
    private javax.swing.JButton btnThem1;
    private javax.swing.JButton btnThongTin1;
    private javax.swing.JButton btnTroVe1;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JComboBox<String> cbbSapXep1;
    private javax.swing.JComboBox<String> cbbTimKiem1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JList<String> jListDSToa;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator25;
    private javax.swing.JSeparator jSeparator26;
    private javax.swing.JDialog jdlThongTinTau;
    private javax.swing.JList<String> jlToaThuocTau;
    private javax.swing.JLabel jlbMaTau;
    private javax.swing.JLabel jlbTenDialog;
    private javax.swing.JLabel jlbToaThuocTau;
    private javax.swing.JTable jtbTau;
    private javax.swing.JTextField jtfMaTau;
    private javax.swing.JTextField jtfTimKiem1;
    // End of variables declaration//GEN-END:variables
}
